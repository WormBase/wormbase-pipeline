/* 
 See the NOTICE file distributed with this work for additional information
 regarding copyright ownership.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

 http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
*/

/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Nextflow config file for busco subworkflow
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Defines Busco Docker image's version and path for the local datsets    
----------------------------------------------------------------------------------------
*/

params {
        busco_version = '3'
        busco_version_for_db = '3'
        odb_version = '9'
        download_path = '/nfs/production/flicek/ensembl/genebuild/genebuild_virtual_user/data/busco_data/data'
        mode = ['protein', 'genome']
        type = ['busco', 'omark']
        omamer_database = '/nfs/production/flicek/ensembl/genebuild/ftricomi/omark_database/OMAmerDB/LUCA_MinFamSize6_OR_MinFamComp05_A21_k6.h5'
        omark_singularity_path = '/hps/software/users/ensembl/genebuild/genebuild_virtual_user/singularity/omark.sif'
        busco3_singularity_path = '/hps/software/users/wormbase/parasite/images/busco_v3/busco-docker_latest.sif'
        busco5_singularity_path = '/hps/software/users/ensembl/genebuild/genebuild_virtual_user/singularity/busco-v5.1.2_cv1.simg'

        busco_summary_genome_file = 'genome_busco_short_summary.txt'
        busco_summary_protein_file = 'busco_short_summary.txt'

        busco_lineages = '/nfs/production/flicek/wormbase/parasite/data/busco_lineages/lineages'

        //path for supplementary scripts
        meta_query_file = "${projectDir}/../bin/meta.sql"
        get_dataset_query = "${projectDir}/../bin/get_busco_dataset.sh"
        ortho_list = "${projectDir}/../data/busco_dataset.txt"

        // Params for dumping the translations. Default is canonical transcripts only
        // You should use '--nocanonical_only' if you want all proteins to be dumped
        dump_params = '-canonical_only 1'

        // Input options
        run = ''
        csvFile = ''

        // db connection
        host = ''
        port = ''
        user = ''

        enscode = ''
        wormcode = ''

        augustus_config_path = ''

        bioperl = "${params.enscode}/bioperl-1.6.924"
        wormpython = ''

        help = false

        outDir = ''
}

scratch = ''
workDir = ''

// Load assembly-checker config
includeConfig '../nextflow.config'

env.PYTHONPATH = params.wormpython
env.AUGUSTUS_CONFIG_PATH = params.augustus_config_path

process { 
    withLabel: 'busco' {
    cpus = 40
    memory = { 40.GB * task.attempt }
    time = { 4.h * task.attempt }

    module = 'singularity-3.7.0-gcc-11.2.0-dtj2md2'
    container = "ezlabgva/busco:${params.busco_version}"
    }
}

process {
    withLabel:busco_run {
        cpus = 8
        memory = { 30.GB * task.attempt }
        time = { 16.h * task.attempt }

        module = 'singularity-3.7.0-gcc-11.2.0-dtj2md2'
        container = "${params.busco5_singularity_path}"
    }
}

process {
    withLabel:fetch_file {
        cpus = 1
        memory = { 4.GB * task.attempt }
        time = { 4.h * task.attempt }
    }
}

process {
    withLabel:busco3_run {
        cpus = 8
        memory = { 30.GB * task.attempt }
        time = { 16.h * task.attempt }

        module = 'singularity-3.7.0-gcc-11.2.0-dtj2md2'
        container = "${params.busco3_singularity_path}"
    }
}

executor {
    submitRateLimit = '10 sec'
}

process {
    withLabel: 'omamer' {
        cpus = 10
        memory = { 50.GB * task.attempt }
        time = { 8.h * task.attempt }
        module = 'singularity-3.7.0-gcc-9.3.0-dp5ffrp' 
        container = "${params.omark_singularity_path}"
    }
}

singularity {
    enabled = true
}

